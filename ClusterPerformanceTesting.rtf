{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Courier New;}{\f2\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\f0\fs22 Step 1: Install iperf3 & bc on Debian/Ubuntu hosts, run commands similar to the following:\par
$ sudo apt-get update\par
$ sudo apt-get upgrade\par
$ sudo apt-get install git gcc make\par
$ git clone {\field{\*\fldinst{HYPERLINK "https://github.com/esnet/iperf"}}{\fldrslt{\ul\cf1 https://github.com/esnet/iperf}}}\f0\fs22\par
$ cd iperf\par
$ ./configure\par
$ sudo make\par
$ sudo make install\par
$ sudo ldconfig\par
$sudo apt-get install bc\par
\par
Step 2: Assign multiple secondary private IPv4 addresses to the network interface of the iperf3 host. To run 10 TCP streams, we need 10 IPv4 addresses.\par
\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Open the Amazon EC2 console at {\field{\*\fldinst{HYPERLINK "https://console.aws.amazon.com/ec2/"}}{\fldrslt{\ul\cf1 https://console.aws.amazon.com/ec2/}}}\f0\fs22 .\par
{\pntext\f2\'B7\tab}In the navigation pane, choose Network Interfaces, and then select the network interface attached to the instance.\par
{\pntext\f2\'B7\tab}Choose Actions, Manage IP Addresses.\par
{\pntext\f2\'B7\tab}Under IPv4 Addresses, choose Assign new IP.\par
{\pntext\f2\'B7\tab}Enter a specific IPv4 address that's within the subnet range for the instance, or leave the field blank to let Amazon select an IP address for you.\par
{\pntext\f2\'B7\tab}(Optional) Choose Allow reassignment to allow the secondary private IP address to be reassigned if it is already assigned to another network interface.\par
{\pntext\f2\'B7\tab}Choose Yes, Update.\par
\pard\sa200\sl276\slmult1\par
Step 3: Issue the following commands at the iperf3 host to configure the subinterfaces. 10.10.0.2xx/16 are just the sample IP addresses. Please replace them with the IPv4 addresses entered in Step2.\par
ifconfig ens3:1 10.10.0.201/16 up\par
ifconfig ens3:2 10.10.0.202/16 up\par
ifconfig ens3:3 10.10.0.203/16 up\par
ifconfig ens3:4 10.10.0.204/16 up\par
ifconfig ens3:5 10.10.0.205/16 up\par
ifconfig ens3:6 10.10.0.206/16 up\par
ifconfig ens3:7 10.10.0.207/16 up\par
ifconfig ens3:8 10.10.0.208/16 up\par
ifconfig ens3:9 10.10.0.209/16 up\par
ifconfig ens3:10 10.10.0.210/16 up\par
\par
Step 4: Copy the following script ("iperf3-parallel-servers") to the iperf3 host:\par
\pard\lang1033\f1 #!/bin/bash\par
# Run multiple parallel instances of iperf servers\par
\par
# Assumes the port numbers used by the servers start at 5001 and increase\par
# e.g. 5001, 5002, 5003, ...\par
# If you want something different, then change the following parameter value\par
# to be: firstport - 1\par
base_port=5200\par
\par
# Command line input: number of servers\par
# E.g. 5\par
num_servers=$1\par
shift\par
\par
# Command line input: base report file name\par
# E.g. report\par
report_base=$1\par
shift\par
\par
# Optional command line input: other iperf options\par
# E.g. -u\par
iperf_options="$*"\par
\par
# Run iperf multiple times\par
for i in `seq 1 $num_servers`; do\par
\par
\tab # Set server port\par
\tab server_port=$(($base_port+$i));\par
\par
\tab # Report file includes server port\par
\tab report_file=$\{report_base\}-$\{server_port\}.txt\par
\par
\tab # Run iperf\par
\tab iperf3 -s -p $server_port $iperf_options &> $report_file &\par
\par
\pard\sa200\sl276\slmult1 done\par
\lang9\f0\par
Step 5: Copy the following script ("iperf3-parallel-clients") to the iperf3 host:\par
\pard\lang1033\f1 #!/bin/bash\par
# Run multiple parallel instances of iperf client\par
# Assumes iperf servers have been started, e.g.\par
# iperf -s -p PORT\par
# Examples:\par
# Run 5 clients for 60 seconds to server 1.1.1.1\par
#    iperf-multiple-clients 1.1.1.1 5 60 report\par
# 5 files will be created, report-1.1.1.1-5001-60.txt, ...\par
#\par
# Run 7 clients for 20 seconds with UDP \par
#    iperf-multipleclients 1.1.1.1 7 20 report-udp -u -b 10M\par
\par
# Assumes the port numbers used by the servers start at 5001 and increase\par
# e.g. 5001, 5002, 5003, ...\par
# If you want something different, then change the following parameter value\par
# to be: firstport - 1\par
base_port=5200\par
base_src_port=15200\par
\par
# Command line input: server IP address\par
# E.g. 1.1.1.1\par
server_ip=$1\par
shift\par
\par
# Command line input: number of clients to start\par
# E.g. 5\par
num_clients=$1\par
shift\par
\par
# Command line input: test duration\par
# E.g. 60\par
test_duration=$1\par
shift\par
\par
# Client ip to bind\par
client_ip=$1\par
shift\par
\par
# Command line input: base report file name\par
# E.g. report\par
report_base=$1\par
shift\par
\par
# Optional command line input: other iperf options\par
# E.g. -u -b 10M\par
iperf_options="$*"\par
\par
# Run iperf multiple times\par
for i in `seq 1 $num_clients`; do\par
\par
\tab # Set server port\par
\tab server_port=$(($base_port+$i));\par
\par
\tab # Set client port\par
\tab client_port=$(($base_src_port+$i));\par
\par
\tab # Report file includes server ip, server port and test duration\par
\tab report_file=$\{report_base\}-$\{server_ip\}-$\{client_port\}-$\{server_port\}-$\{test_duration\}.txt\par
\par
\tab # Run iperf\par
\tab iperf3 -c $server_ip -p $server_port -t $test_duration -B $client_ip --cport $client_port $iperf_options &> $report_file &\par
\par
done\par
\par
\pard\sa200\sl276\slmult1\lang9\f0\par
Step 6: Copy the following script ("iperf3-parallel-clients") to the iperf3 host:\par
\pard\lang1033\f1 #!/bin/bash\par
# Run multiple parallel instances of iperf client\par
# Assumes iperf servers have been started, e.g.\par
# iperf -s -p PORT\par
# Examples:\par
# Run 5 clients for 60 seconds to server 1.1.1.1\par
#    iperf-multiple-clients 1.1.1.1 5 60 report\par
# 5 files will be created, report-1.1.1.1-5001-60.txt, ...\par
#\par
# Run 7 clients for 20 seconds with UDP \par
#    iperf-multipleclients 1.1.1.1 7 20 report-udp -u -b 10M\par
\par
# Assumes the port numbers used by the servers start at 5001 and increase\par
# e.g. 5001, 5002, 5003, ...\par
# If you want something different, then change the following parameter value\par
# to be: firstport - 1\par
base_port=5200\par
base_src_port=15200\par
\par
# Command line input: server IP address\par
# E.g. 1.1.1.1\par
server_ip=$1\par
shift\par
\par
# Command line input: number of clients to start\par
# E.g. 5\par
num_clients=$1\par
shift\par
\par
# Command line input: test duration\par
# E.g. 60\par
test_duration=$1\par
shift\par
\par
# Client ip to bind\par
client_ip=$1\par
shift\par
\par
# Command line input: base report file name\par
# E.g. report\par
report_base=$1\par
shift\par
\par
# Optional command line input: other iperf options\par
# E.g. -u -b 10M\par
iperf_options="$*"\par
\par
# Run iperf multiple times\par
for i in `seq 1 $num_clients`; do\par
\par
\tab # Set server port\par
\tab server_port=$(($base_port+$i));\par
\par
\tab # Set client port\par
\tab client_port=$(($base_src_port+$i));\par
\par
\tab # Report file includes server ip, server port and test duration\par
\tab report_file=$\{report_base\}-$\{server_ip\}-$\{client_port\}-$\{server_port\}-$\{test_duration\}.txt\par
\par
\tab # Run iperf\par
\tab iperf3 -c $server_ip -p $server_port -f m -t $test_duration -B $client_ip --cport $client_port $iperf_options &> $report_file &\par
\par
done\par
\par
\pard\sa200\sl276\slmult1\lang9\f0 Step 7: Copy the following script ("tp-test") to the iperf3 host. Put "tp-test" at the same directory as "iperf3-parallel-clients"\lang1033\f1\par
\lang9 #!/bin/bash\par
grep sender report* > temp.csv\par
awk -F " " '\{print $7\}' temp.csv > output.txt\par
paste -sd+ output.txt | bc\par
\pard\sa200\sl276\slmult1\f0 Step 8: Start iperf3 servers at all iperf3 hosts with the following command:\par
\f1 ./iperf3-parallel-servers 10 report\f0\par
Note: \par
-  Parameter "10" means that we start 10 iperf3 server daemons with base port staring from 5200\par
- Parameter "report" means that we start to log the iperf3 server output at local report-* files \par
Step 9: Start iperf3 clients at all iperf3 hosts with the following command:\par
\lang1033\f1 ./iperf3-parallel-clients 10.10.0.210 10 120 10.11.0.201 report\par
\pard\sa200\sl276\slmult1\lang9\f0 Note:\par
- Please replace "10.10.0.210" with the private IP address of eth0 port at iperf3 server\par
- Parameter "10" means that we start 10 iperf3 clients\par
- Parameter "120" means that iperf3 test will last for 120 seconds\par
- Please replace "10.11.0.201" with the starting IP address you used in Step 3\par
- Parameter "report" means that we start to log the iperf3 client output at local report-* files\par
Step 10: After iperf3 test finishes in Step 9, please run the script copied in Step 7. The script output is the sum of the throughputs for all 10 iperf3 streams.\par
\f1 ./tp-test\f0\par
\par
}
 